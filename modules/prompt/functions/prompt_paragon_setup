# modified lean prompt theme
# originally by Miek Gieben: https://github.com/miekg/lean
# modified by Robbie Smith: https://github.com/zoqaeski/prezto
#
# Base on Pure by Sindre Sorhus: https://github.com/sindresorhus/pure
#
# MIT License
#

# For my own and others sanity
# git:
# %b => current branch
# %a => current action (rebase/merge)
# prompt:
# %F => color dict
# %f => reset color
# %~ => current path
# %* => time
# %n => username
# %m => shortname host
# %(?..) => prompt conditional - %(condition.true.false)
# terminal codes:
# \e7   => save cursor position
# \e[2A => move cursor 2 lines up
# \e[1G => go to position 1 in terminal
# \e8   => restore cursor position
# \e[K  => clears everything after the cursor on the current line
# \e[2K => clear everything on the current line


PROMPT_PARAGON_TMUX=
PROMPT_PARAGON_PATH_PERCENT=60
PROMPT_PARAGON_USER_SYM='$'
PROMPT_PARAGON_ROOT_SYM='#'

prompt_paragon_help() {
  cat <<'EOF'
This is a one line prompt that tries to stay out of your face. It utilizes
the right side prompt for most information, like the CWD. The left side of
the prompt is only a '%'. The only other information shown on the left are
the jobs numbers of background jobs. When the exit code of a process isn't
zero the prompt turns red. If a process takes more then 5 (default) seconds
to run the total running time is shown in the next prompt.

Currently there is no configuration possible.

You can invoke it thus:

  prompt paragon

EOF
}

# turns seconds into human readable time, 165392 => 1d 21h 56m 32s
prompt_paragon_human_time() {
    local tmp=$1
    local days=$(( tmp / 60 / 60 / 24 ))
    local hours=$(( tmp / 60 / 60 % 24 ))
    local minutes=$(( tmp / 60 % 60 ))
    local seconds=$(( tmp % 60 ))
    (( $days > 0 )) && echo -n "${days}d "
    (( $hours > 0 )) && echo -n "${hours}h "
    (( $minutes > 0 )) && echo -n "${minutes}m "
    echo "${seconds}s "
}

# fastest possible way to check if repo is dirty
prompt_paragon_git_dirty() {
    # check if we're in a git repo
    command git rev-parse --is-inside-work-tree &>/dev/null || return
    # check if it's dirty
    local umode="-uno" #|| local umode="-unormal"
    command test -n "$(git status --porcelain --ignore-submodules ${umode})"

    (($? == 0)) && echo ' +'
}

# displays the exec time of the last command if set threshold was exceeded
prompt_paragon_cmd_exec_time() {
    local stop=$EPOCHSECONDS
    local start=${cmd_timestamp:-$stop}
    integer elapsed=$stop-$start
    (($elapsed > ${PROMPT_PARAGON_CMD_MAX_EXEC_TIME:=5})) && prompt_paragon_human_time $elapsed
}

prompt_paragon_preexec() {
    cmd_timestamp=$EPOCHSECONDS

    # shows the current dir and executed command in the title when a process is active
    print -Pn "\e]0;"
    echo -nE "$PWD:t: $2"
    print -Pn "\a"
}

prompt_paragon_pwd() {
    local paragon_path="`print -Pn '%~'`"
    if (($#paragon_path / $COLUMNS.0 * 100 > ${PROMPT_PARAGON_PATH_PERCENT:=60})); then
        print -Pn '...%2/'
        return
    fi
    print $paragon_path
}

prompt_paragon_precmd() {
    vcs_info

    local jobs
    local prompt_paragon_jobs
    unset jobs
    for a (${(k)jobstates}) {
        j=$jobstates[$a];i="${${(@s,:,)j}[2]}"
        jobs+=($a${i//[^+-]/})
    }
    # print with [ ] and comma separated
    prompt_paragon_jobs=""
    [[ -n $jobs ]] && prompt_paragon_jobs="%F{242}["${(j:,:)jobs}"] "

    local PROMPT_PARAGON_RIGHT="%F{yellow}`prompt_paragon_cmd_exec_time`%f%F{blue}`prompt_paragon_pwd`%F{242}$vcs_info_msg_0_`prompt_paragon_git_dirty`$prompt_paragon_username$prompt_paragon_host%f"
    local PROMPT_PARAGON_LEFT="$prompt_paragon_jobs%F{yellow}$prompt_paragon_tmux%(?.%F{magenta}.%F{red})%(!.${PROMPT_PARAGON_ROOT_SYM}.${PROMPT_PARAGON_USER_SYM})%f%b "

    unset cmd_timestamp # reset value since `preexec` isn't always triggered

    PROMPT="$PROMPT_PARAGON_RIGHT $PROMPT_PARAGON_LEFT"
    RPROMPT=''
}

prompt_paragon_setup() {
    prompt_opts=(cr subst percent)

    zmodload zsh/datetime
    autoload -Uz add-zsh-hook
    autoload -Uz vcs_info

    add-zsh-hook precmd prompt_paragon_precmd
    add-zsh-hook preexec prompt_paragon_preexec

	# Set editor-info parameters.
	zstyle ':prezto:module:editor:info:completing' format '%B%F{white}...%f%b'

    zstyle ':vcs_info:*' enable git
    zstyle ':vcs_info:git*' formats ' %b'
    zstyle ':vcs_info:git*' actionformats ' %b|%a'

	[[ "$SSH_CONNECTION" != '' ]] && prompt_paragon_host=" %F{yellow}%m%f"

	# show username@host if root, with username in white
	[[ $UID -eq 0 ]] && prompt_paragon_username=" %F{red}%n%f%F{242}%f"

	# If on tmux, get environment variables
    [[ "$TMUX" != '' ]] && eval $( tmux show-environment -s )
	
}

prompt_paragon_setup "$@"
# vim: ft=zsh
